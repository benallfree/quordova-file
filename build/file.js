// Generated by CoffeeScript 1.10.0
(function() {
  var File, Q;

  Q = require('q');

  File = (function() {
    function File() {}

    File.exists = function(fname) {
      var d;
      console.log("Checking to see if exists:", fname);
      d = Q.defer();
      window.resolveLocalFileSystemURL(fname, (function(fileEntry) {
        return d.resolve(fileEntry);
      }), (function() {
        return d.reject();
      }));
      return d.promise;
    };

    File.rm = function(fname) {
      var deferred;
      deferred = Q.defer();
      File.exists(fname).then(function(fileEntry) {
        if (fileEntry.isFile) {
          console.log("Is a file", fname);
          fileEntry.remove((function(success) {
            console.log("Delete successful", success);
            return deferred.resolve();
          }), (function(err) {
            console.log("Delete unsuccessful", err);
            return deferred.reject(err);
          }));
        }
        if (fileEntry.isDirectory) {
          console.log("Is a directory", fname);
          return fileEntry.removeRecursively((function(success) {
            console.log("Dir was successfully removed", fname);
            return deferred.resolve();
          }), (function(err) {
            console.log("There was an error removing the directory", err);
            return deferred.reject(err);
          }));
        }
      }).fail(function() {
        console.log("File does not exist", fname);
        return deferred.resolve();
      });
      return deferred.promise;
    };

    return File;

  })();

  module.exports = File;

}).call(this);
